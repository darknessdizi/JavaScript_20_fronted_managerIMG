(()=>{"use strict";class t{constructor(t){this.edit=t}init(){this.edit.bindToDOM(),this.edit.addClickConteinerListeners(t.onClickConteiner.bind(this)),this.edit.addChangeInputListeners(this.onChangeInput.bind(this)),this.edit.addSubmitFormListeners(this.onSubmitForm.bind(this)),this.edit.addRemoveListeners(t.onRemoveClick),this.getImagesFromServer(),this.edit.conteiner.addEventListener("dragover",(t=>{t.preventDefault()})),this.edit.conteiner.addEventListener("drop",(t=>{t.preventDefault();const{files:e}=t.dataTransfer;e&&this.dropFiles(e)}))}getImagesFromServer(){const t=new XMLHttpRequest;t.addEventListener("load",this.callbackLoad.bind(this,t)),t.open("GET","http://localhost:9000?method=getImages"),t.send()}dropFiles(t){const e=new FormData;for(const n of t){const{name:t}=n;e.append("file",n,t)}const n=new XMLHttpRequest;n.addEventListener("load",this.callbackLoad.bind(this,n)),n.open("POST","http://localhost:9000?method=dropImages"),n.send(e)}static onClickConteiner(t){const{target:e}=t;e.closest(".conteiner__frame").querySelector(".frame_input").dispatchEvent(new MouseEvent("click"))}onChangeInput(t){const{files:e}=t.target;if(!e)return;this.edit.conteiner.dispatchEvent(new Event("submit"));t.target.value=""}onSubmitForm(){const t=new FormData(this.edit.conteiner),e=new XMLHttpRequest;e.addEventListener("load",this.callbackLoad.bind(this,e)),e.open("POST","http://localhost:9000?method=addImages"),e.send(t)}static onRemoveClick(t){const{target:e}=t,n=e.closest(".image__conteiner"),i=n.querySelector("img"),s=new XMLHttpRequest,a=`method=removeImage&id=${i.id}`;s.addEventListener("load",(()=>{s.status>=200&&s.status<300&&n.remove()})),s.open("POST",`http://localhost:9000?${a}`),s.send()}callbackLoad(t){if(t.status>=200&&t.status<300){const e=JSON.parse(t.responseText);for(const t of e){const e=`http://localhost:9000${t.path}`;this.edit.createDivImage(t.id,t.name,e)}}}}class e{constructor(t){this.parent=t,this.divImgs=null,this.conteiner=null,this.clickConteinerListeners=[],this.changeInputListeners=[],this.submitFormListeners=[],this.removeListeners=[]}bindToDOM(){const t=e.addTagHTML(this.parent,"content-task","main");this.addTagInputFile(t),this.divImgs=e.addTagHTML(t,"conteiner__images")}static addTagHTML(t,e=null,n="div"){const i=document.createElement(n);return i.classList.add(e),t.append(i),i}createDivImage(t,e,n){const i=document.createElement("img");i.classList.add("image"),i.setAttribute("src",n),i.setAttribute("alt",e),i.setAttribute("title",e),i.setAttribute("id",t),i.addEventListener("load",(t=>this.onLoad(t)))}onLoad(t){const n=e.addTagHTML(this.divImgs,"image__conteiner");n.append(t.target);const i=e.addTagHTML(n,"image__delete","a");i.textContent="X",i.addEventListener("click",(t=>this.onRemoveClick(t)))}addTagInputFile(t){this.conteiner=e.addTagHTML(t,"conteiner__frame","form"),this.conteiner.addEventListener("click",(t=>this.onClickConteiner(t))),this.conteiner.addEventListener("submit",(t=>this.onSubmitForm(t)));const n=e.addTagHTML(this.conteiner,"frame_input","input");n.setAttribute("accept","image/*"),n.setAttribute("multiple",""),n.setAttribute("name","file"),n.type="file",n.addEventListener("change",(t=>this.onChangeInput(t)));const i=e.addTagHTML(this.conteiner,"frame_span");e.addTagHTML(i,"span_text","span").textContent="Drag and Drop files here or Click to select"}onClickConteiner(t){t.preventDefault(),this.clickConteinerListeners.forEach((e=>e.call(null,t)))}addClickConteinerListeners(t){this.clickConteinerListeners.push(t)}onChangeInput(t){t.preventDefault(),this.changeInputListeners.forEach((e=>e.call(null,t)))}addChangeInputListeners(t){this.changeInputListeners.push(t)}onSubmitForm(t){t.preventDefault(),this.submitFormListeners.forEach((e=>e.call(null,t)))}addSubmitFormListeners(t){this.submitFormListeners.push(t)}onRemoveClick(t){this.removeListeners.forEach((e=>e.call(null,t)))}addRemoveListeners(t){this.removeListeners.push(t)}}const n=document.querySelector("body"),i=new e(n);new t(i).init()})();